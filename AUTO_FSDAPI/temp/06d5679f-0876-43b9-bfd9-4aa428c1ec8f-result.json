{"name": "修改桌面组", "status": "failed", "statusDetails": {"message": "AssertionError: 实际结果{\"statusMsg\": \"桌面组名称已存在\", \"detailErrorReason\": \"桌面组名称已存在\", \"statusCode\": 1}并不包含期望内容,期望内容是操作成功,失败", "trace": "self = <test_case.test_api.TestCase object at 0x0000021C922885F8>, casedatas = {'caseid': 'FSD0005', 'casestroy': '修改桌面组', 'casetitle': '修改桌面组', 'content-type': 'application/json', ...}\n\n    @allure.feature(\"FSD3.2接口测试\")\n    @pytest.mark.parametrize(\"casedatas\",replycls.get_cases())\n    def test_autoapi(self, casedatas):\n        caseid=casedatas['caseid']\n        url= casedatas['url']\n        method=casedatas['method']\n        content_type=casedatas.get('content-type')\n        headers = {\n            \"Authorization\": \"Bearer \" + TOKEN\n        }\n        if content_type:\n            headers[\"content-type\"] = content_type\n        datas = casedatas.get('datas')\n        if datas:\n            datas = json.loads(datas)\n        #前置条件，即用例依赖\n        preconditions=casedatas.get('preconditions')\n        relykeys=casedatas.get('relykey')\n        if relykeys and preconditions:\n            datas=replycls.get_reply_value(preconditions,datas,relykeys)\n            replycls.set_cellvalue(caseid,datas,1)\n    \n        # statusMsg=casedatas['statusMsg']\n        file=casedatas['file']\n        dic_allure={\n            \"title\":casedatas['casetitle'],\n            \"story\":casedatas['casestroy'],\n            \"description\":casedatas['description'],\n            \"exportfile\":casedatas['exportfile']\n        }\n        exp_code=casedatas['exp_code']\n        exp_msg=casedatas['exp_msg']\n        req_code,req_txt= RC.Sendrequest(method,url=url, data=datas,headers=headers ,files=file,Content_Type=content_type,**dic_allure)\n        replycls.set_cellvalue(caseid,req_txt,2)\n        asster.assert_code(req_code,exp_code)\n>       asster.assert_in_body(req_txt,exp_msg)\n\ntest_case\\test_api.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <comn.asserter.Assertion object at 0x0000021C9222F0B8>, msg = '{\"statusMsg\": \"桌面组名称已存在\", \"detailErrorReason\": \"桌面组名称已存在\", \"statusCode\": 1}', exp_msg = '操作成功'\n\n    def assert_in_body(self,msg,exp_msg):\n        '''\n        断言期望结果是否在实际结果中\n        :param msg:\n        :param exp_msg:\n        :return:\n        '''\n        try:\n            msg=json.dumps(msg,ensure_ascii=False)\n>           assert exp_msg in msg,\"实际结果{}并不包含期望内容,期望内容是{},失败\".format(msg,exp_msg)\nE           AssertionError: 实际结果{\"statusMsg\": \"桌面组名称已存在\", \"detailErrorReason\": \"桌面组名称已存在\", \"statusCode\": 1}并不包含期望内容,期望内容是操作成功,失败\n\ncomn\\asserter.py:43: AssertionError"}, "description": "修改桌面组", "attachments": [{"name": "请求url", "source": "d33613f9-f9c1-4d8d-adce-1ba1638908a4-attachment.attach"}, {"name": "请求方式", "source": "52317861-678d-4afc-8622-7bd6b0788127-attachment.attach"}, {"name": "请求头", "source": "9ad87cb3-d980-4380-be8c-2d731ea5b9a1-attachment.attach"}, {"name": "请求参数", "source": "dae3aad4-7727-4a24-a448-0c3964b6bc08-attachment.attach"}, {"name": "log", "source": "805d9298-947b-4cc1-a7f8-a05581186d1a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "casedatas", "value": "{'caseid': 'FSD0005', 'casestroy': '修改桌面组', 'casetitle': '修改桌面组', 'description': '修改桌面组', 'url': '/gateway/user/desktopGroup/updateDesktopGroup', 'method': 'PUT', 'content-type': 'application/json', 'datas': '{\\n    \"id\": 73,\\n    \"groupName\": \"api桌面组更新\",\\n    \"description\": \"api桌面组\",\\n    \"desktop\": 5,\\n    \"cpu\": 50,\\n    \"mem\": 50,\\n    \"disk\": 500,\\n    \"volume\": 5,\\n    \"modelMach\": 2\\n}', 'statusMsg': '[\\n    \"statusMsg\",\\n    \"detailErrorReason\",\\n    \"statusCode\"\\n]', 'file': None, 'isrun': True, 'relykey': 'id', 'preconditions': 'FSD0003->$.infoData.list[0].id', 'exportfile': None, 'response_data': '{\\n    \"statusMsg\": \"桌面组名称已存在\",\\n    \"detailErrorReason\": \"桌面组名称已存在\",\\n    \"statusCode\": 1\\n}', 'exp_code': 200, 'exp_msg': '操作成功'}"}], "start": 1611827085807, "stop": 1611827085951, "uuid": "ce125a58-a4c6-4267-83ea-c904aac61fdc", "historyId": "879ab8fd358fd3966f3e91883f6febae", "testCaseId": "81538df8b285a74b5d6a99e33e541e53", "fullName": "test_case.test_api.TestCase#test_autoapi", "labels": [{"name": "story", "value": "修改桌面组"}, {"name": "feature", "value": "FSD3.2接口测试"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "uy7-lkjhh"}, {"name": "thread", "value": "13992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_api"}]}