{"name": "创建用户", "status": "failed", "statusDetails": {"message": "AssertionError: 期望码201,实际响应码200,失败", "trace": "self = <test_case.test_api.TestCase object at 0x00000282C6610D68>, casedatas = {'caseid': 'FSD0010', 'casestroy': '创建用户', 'casetitle': '创建用户', 'content-type': 'application/json', ...}\n\n    @allure.feature(\"FSD3.2接口测试\")\n    @pytest.mark.parametrize(\"casedatas\",replycls.get_cases())\n    def test_autoapi(self, casedatas):\n        caseid=casedatas['caseid']\n        url= casedatas['url']\n        method=casedatas['method']\n        content_type=casedatas.get('content-type')\n        headers = {\n            \"Authorization\": \"Bearer \" + TOKEN\n        }\n        if content_type:\n            headers[\"content-type\"] = content_type\n        datas = casedatas.get('datas')\n        if datas:\n            datas = json.loads(datas)\n        #前置条件，即用例依赖\n        preconditions=casedatas.get('preconditions')\n        relykeys=casedatas.get('relykey')\n        if relykeys and preconditions:\n            datas=replycls.get_reply_value(preconditions,datas,relykeys)\n            replycls.set_cellvalue(caseid,datas,1)\n    \n        # statusMsg=casedatas['statusMsg']\n        file=casedatas['file']\n        dic_allure={\n            \"title\":casedatas['casetitle'],\n            \"story\":casedatas['casestroy'],\n            \"description\":casedatas['description'],\n            \"exportfile\":casedatas['exportfile']\n        }\n        exp_code=casedatas['exp_code']\n        exp_msg=casedatas['exp_msg']\n        req_code,req_txt= RC.Sendrequest(method,url=url, data=datas,headers=headers ,files=file,Content_Type=content_type,**dic_allure)\n        replycls.set_cellvalue(caseid,req_txt,2)\n>       asster.assert_code(req_code,exp_code)\n\ntest_case\\test_api.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <comn.asserter.Assertion object at 0x00000282C66086D8>, code = 200, exp_code = 201\n\n    def assert_code(self,code,exp_code):\n        '''\n        断言响应码，并将结果写入日志\n        :param code: 实际响应码\n        :param exp_code: 期望码\n        :return:\n        '''\n        try:\n>           assert code==exp_code,\"期望码{},实际响应码{},失败\".format(exp_code,code)\nE           AssertionError: 期望码201,实际响应码200,失败\n\ncomn\\asserter.py:26: AssertionError"}, "description": "创建用户", "attachments": [{"name": "请求url", "source": "1dc069f8-5078-4172-a0d3-86e5abc2c51c-attachment.attach"}, {"name": "请求头", "source": "edc9e6df-1aad-412e-8444-03ab56ec5b4f-attachment.attach"}, {"name": "请求参数", "source": "a3bc87fe-fc47-4237-949e-aa7112c5bf1e-attachment.attach"}, {"name": "log", "source": "4ef6ed58-50dd-4e44-8e1f-3bc3bceb97ae-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "casedatas", "value": "{'caseid': 'FSD0010', 'casestroy': '创建用户', 'casetitle': '创建用户', 'description': '创建用户', 'url': '/gateway/user/user/createUser', 'method': 'POST', 'content-type': 'application/json', 'datas': '{\\n    \"username\": \"fsd001\",\\n    \"name\": \"fsd001\",\\n    \"groupId\": 73,\\n    \"email\": \"fsd001@troila.com\",\\n    \"phone\": \"17145785412\",\\n    \"userPlotId\": \"\"\\n}', 'statusMsg': '[\\n    \"statusMsg\",\\n    \"detailErrorReason\",\\n    \"statusCode\"\\n]', 'file': None, 'isrun': True, 'relykey': 'groupId', 'preconditions': 'FSD0003->$.infoData.list[0].id', 'exportfile': None, 'response_data': '{\\n    \"statusMsg\": \"用户名已存在\",\\n    \"detailErrorReason\": \"用户名已存在\",\\n    \"statusCode\": 1\\n}', 'exp_code': 201, 'exp_msg': '操作成功'}"}], "start": 1611817617644, "stop": 1611817617738, "uuid": "37898981-c363-4b79-b378-0e5c235f2149", "historyId": "0a7feacb9216101b0720c5200e1957f4", "testCaseId": "81538df8b285a74b5d6a99e33e541e53", "fullName": "test_case.test_api.TestCase#test_autoapi", "labels": [{"name": "story", "value": "创建用户"}, {"name": "feature", "value": "FSD3.2接口测试"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "uy7-lkjhh"}, {"name": "thread", "value": "4760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_api"}]}